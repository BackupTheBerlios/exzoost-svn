/*
 * ViewTransactionDialog.java
 *
 * Created on December 18, 2004, 12:49 PM
 */

package com.exzoost.gui.transactions;

import com.exzoost.gui.helper.GuiHelper;
import com.exzoost.gui.htmleditor.HTMLEditorManipulation;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.SQLException;
import com.exzoost.database.Transaction;
/**
 *
 * @author  knight
 */
public class ViewTransactionDialog extends javax.swing.JDialog {
    private Connection conn;
    private Transaction tr;
    private Statement stmt;
    private ResultSet uprs;
    /** Creates new form ViewTransactionDialog */
    public ViewTransactionDialog(java.awt.Frame parent, boolean modal, 
            javax.swing.JEditorPane transactionsEP, Connection conn ) {
        super(parent, modal);
        this.conn = conn;
        initComponents();
        
        GuiHelper.setOnCenter((Window)this);
        
        this.transactionsEP = transactionsEP;
        
        //setup default button
        getRootPane().setDefaultButton(OK);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        MainPanel = new javax.swing.JPanel();
        FromLabel = new javax.swing.JLabel();
        jDateChooserFrom = new com.toedter.calendar.JDateChooser();
        ToLabel = new javax.swing.JLabel();
        jDateChooserTo = new com.toedter.calendar.JDateChooser();
        SaleCheckBox = new javax.swing.JCheckBox();
        PurchaseCheckBox = new javax.swing.JCheckBox();
        SalaryCheckBox = new javax.swing.JCheckBox();
        OtherOutcomeCheckBox = new javax.swing.JCheckBox();
        OtherIncomeCheckBox = new javax.swing.JCheckBox();
        TopDummyLabel = new javax.swing.JLabel();
        LeftDummyLabel = new javax.swing.JLabel();
        RightDummyLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        OK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Transaction Dialog");
        MainPanel.setLayout(new java.awt.GridBagLayout());

        FromLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FromLabel.setText("From : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        MainPanel.add(FromLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        MainPanel.add(jDateChooserFrom, gridBagConstraints);

        ToLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToLabel.setText("To : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        MainPanel.add(ToLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 0);
        MainPanel.add(jDateChooserTo, gridBagConstraints);

        SaleCheckBox.setText("Sale");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        MainPanel.add(SaleCheckBox, gridBagConstraints);

        PurchaseCheckBox.setText("Purchase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        MainPanel.add(PurchaseCheckBox, gridBagConstraints);

        SalaryCheckBox.setText("Salary Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        MainPanel.add(SalaryCheckBox, gridBagConstraints);

        OtherOutcomeCheckBox.setText("Outcome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        MainPanel.add(OtherOutcomeCheckBox, gridBagConstraints);

        OtherIncomeCheckBox.setText("Income");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        MainPanel.add(OtherIncomeCheckBox, gridBagConstraints);

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        TopDummyLabel.setText(" ");
        getContentPane().add(TopDummyLabel, java.awt.BorderLayout.NORTH);

        LeftDummyLabel.setText("     ");
        getContentPane().add(LeftDummyLabel, java.awt.BorderLayout.WEST);

        RightDummyLabel.setText("     ");
        getContentPane().add(RightDummyLabel, java.awt.BorderLayout.EAST);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        jPanel1.add(Cancel);

        OK.setText("OK");
        OK.setPreferredSize(new java.awt.Dimension(75, 25));
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        jPanel1.add(OK);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        //the day we want to see the transaction( it sucks!!! ok??? )
        java.sql.Date dateFrom = new java.sql.Date(jDateChooserFrom.getDate().getTime());
        java.sql.Date dateTo = new java.sql.Date(jDateChooserTo.getDate().getTime());
        String datefromst = "'" + dateFrom + "'";
        String datetost = "'" + dateTo + "'";
        
        //we don't want to deal with null editorpane
        if(transactionsEP==null)
            return;
        
        HTMLEditorManipulation html = new HTMLEditorManipulation( transactionsEP, conn );
        
        //clear the text first
        transactionsEP.setText("");
        
        try {
            stmt = conn.createStatement();
            if(SaleCheckBox.isSelected()==true) {
                //get the invoice from the master of transaction
                uprs = stmt.executeQuery("SELECT " +
                        "invoice FROM data_transaksi_penjualan " +
                        "WHERE tanggal BETWEEN " + datefromst + " AND " + datetost  );
                
                //rollover babe!!!
                while(uprs.next()) {
                    html.HTMLSaleTransactionDialog( uprs.getString("invoice") );
                }
                
                uprs.close();
            }
            if(PurchaseCheckBox.isSelected()==true) {
                //get the invoice from the master of transaction
                uprs = stmt.executeQuery("SELECT " +
                        "invoice FROM data_transaksi_pembelian " +
                        "WHERE tanggal BETWEEN " + datefromst + " AND " + datetost );
                
                //rollover babe!!!
                while(uprs.next()) {
                    html.HTMLBuyTransactionDialog( uprs.getString("invoice") );
                }
                
                uprs.close();
            }
            if(SalaryCheckBox.isSelected()==true) {
                ResultSet uprs = stmt.executeQuery("SELECT " +
                        "invoice_gaji FROM data_transaksi_gaji " +
                        "WHERE tanggal_gaji BETWEEN " + datefromst + " AND " + datetost );
                while(uprs.next()) {
                    html.HTMLSalaryDialog( uprs.getString("invoice_gaji") );
                }
                uprs.close(); 
            }
            if(OtherOutcomeCheckBox.isSelected()==true) {
                uprs = stmt.executeQuery("SELECT " +
                        "invoice, nama FROM transaksi_pengeluaran " +
                        "WHERE tanggal BETWEEN " + datefromst + " AND " + datetost );
                while(uprs.next()) {
                        html.HTMLOutcomeDialog(uprs.getString("invoice"));
                }
                uprs.close(); 
            }
            if(OtherIncomeCheckBox.isSelected()==true) {
                uprs = stmt.executeQuery("SELECT " +
                        "invoice FROM transaksi_pemasukan_lain " +
                        "WHERE tanggal BETWEEN " + datefromst + " AND " + datetost );
                while(uprs.next()) {
                    html.HTMLIncomeDialog(uprs.getString("invoice"));
                }
                uprs.close(); 
            }
            stmt.close();
        }
        catch( SQLException e ) {
            e.printStackTrace();
        }
        
        dispose();
    }//GEN-LAST:event_OKActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        dispose();
    }//GEN-LAST:event_CancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTransactionDialog(new javax.swing.JFrame(), true, null, null).setVisible(true);
            }
        });
    }
    
    private javax.swing.JEditorPane transactionsEP;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel FromLabel;
    private javax.swing.JLabel LeftDummyLabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton OK;
    private javax.swing.JCheckBox OtherIncomeCheckBox;
    private javax.swing.JCheckBox OtherOutcomeCheckBox;
    private javax.swing.JCheckBox PurchaseCheckBox;
    private javax.swing.JLabel RightDummyLabel;
    private javax.swing.JCheckBox SalaryCheckBox;
    private javax.swing.JCheckBox SaleCheckBox;
    private javax.swing.JLabel ToLabel;
    private javax.swing.JLabel TopDummyLabel;
    private com.toedter.calendar.JDateChooser jDateChooserFrom;
    private com.toedter.calendar.JDateChooser jDateChooserTo;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}
