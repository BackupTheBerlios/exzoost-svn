/*
 * SearchInventoryDialog.java
 *
 * Created on November 14, 2004, 8:32 AM
 */

package com.exzoost.gui.transactions;

import com.exzoost.database.InventoryDB;
import com.exzoost.database.Transaction;
import com.exzoost.gui.helper.GuiHelper;
import com.exzoost.gui.htmleditor.HTMLEditorManipulation;
import com.exzoost.gui.maingui.MainGUI;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  knight
 */
public class SearchTransactionDialog extends javax.swing.JDialog {
    private Connection conn;
    private Transaction tr;
    /** Creates new form SearchInventoryDialog */
    public SearchTransactionDialog(java.awt.Frame parent, boolean modal, 
            javax.swing.JEditorPane transactionsEP, Connection conn ) {
        super(parent, modal);
        initComponents();
        this.conn = conn;
        
        tr = new Transaction( conn );
        
        GuiHelper.setOnCenter((Window)this);
        
        this.transactionsEP = transactionsEP;
        
        //default button
        getRootPane().setDefaultButton(Find);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        bottomJP = new javax.swing.JPanel();
        Close = new javax.swing.JButton();
        Find = new javax.swing.JButton();
        topJP = new javax.swing.JPanel();
        leftJP = new javax.swing.JPanel();
        rightJP = new javax.swing.JPanel();
        SearchTabbedPane = new javax.swing.JTabbedPane();
        SaleJP = new javax.swing.JPanel();
        SaleInvoiceLabel = new javax.swing.JLabel();
        SaleInvoiceTF = new javax.swing.JTextField();
        SaleSalesmanLabel = new javax.swing.JLabel();
        SaleSalesmanTF = new javax.swing.JTextField();
        SaleCustomerLabel = new javax.swing.JLabel();
        SaleCustomerTF = new javax.swing.JTextField();
        SaleSenderLabel = new javax.swing.JLabel();
        SaleSenderTF = new javax.swing.JTextField();
        SaleDiscountLessLabel = new javax.swing.JLabel();
        SaleDiscountMoreLabel = new javax.swing.JLabel();
        SaleDiscountLessTF = new javax.swing.JTextField();
        SaleDiscountMoreTF = new javax.swing.JTextField();
        SaleCommentLabel = new javax.swing.JLabel();
        SaleCommentTF = new javax.swing.JTextField();
        PurchaseJP = new javax.swing.JPanel();
        PurchaseInvoiceLabel = new javax.swing.JLabel();
        PurchaseInvoiceTF = new javax.swing.JTextField();
        PurchaseCommisionerLabel = new javax.swing.JLabel();
        PurchaseCommisionerTF = new javax.swing.JTextField();
        PurchaseSuplierLabel = new javax.swing.JLabel();
        PurchaseSuplierTF = new javax.swing.JTextField();
        PurchaseSenderLabel = new javax.swing.JLabel();
        PurchaseSenderTF = new javax.swing.JTextField();
        PurchaseDiscountLessLabel = new javax.swing.JLabel();
        PurchaseDiscountMoreLabel = new javax.swing.JLabel();
        PurchaseDiscountLessTF = new javax.swing.JTextField();
        PurchaseDiscountMoreTF = new javax.swing.JTextField();
        PurchaseCommentLabel = new javax.swing.JLabel();
        PurchaseCommentTF = new javax.swing.JTextField();
        SalaryJP = new javax.swing.JPanel();
        SalaryInvoiceLabel = new javax.swing.JLabel();
        SalaryInvoiceTF = new javax.swing.JTextField();
        SalaryCommentLabel = new javax.swing.JLabel();
        SalaryCommentTF = new javax.swing.JTextField();
        IncomeJP = new javax.swing.JPanel();
        IncomeInvoiceLabel = new javax.swing.JLabel();
        IncomeInvoiceTF = new javax.swing.JTextField();
        IncomeValueLessLabel1 = new javax.swing.JLabel();
        IncomeValueMoreLabel = new javax.swing.JLabel();
        IncomeValueLessTF = new javax.swing.JTextField();
        IncomeValueMoreTF = new javax.swing.JTextField();
        IncomeCommentLabel = new javax.swing.JLabel();
        IncomeCommentTF = new javax.swing.JTextField();
        OutcomeJP = new javax.swing.JPanel();
        OutcomeInvoiceLabel = new javax.swing.JLabel();
        OutcomeInvoiceTF = new javax.swing.JTextField();
        OutcomeValueLessLabel = new javax.swing.JLabel();
        OutcomeValueMoreLabel = new javax.swing.JLabel();
        OutcomeValueLessTF = new javax.swing.JTextField();
        OutcomeValueMoreTF = new javax.swing.JTextField();
        OutcomeCommentLabel = new javax.swing.JLabel();
        OutcomeCommentTF = new javax.swing.JTextField();
        OutcomeTypeChB = new javax.swing.JCheckBox();
        OutcomeTypeCoB = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Transactions Dialog");
        bottomJP.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        bottomJP.add(Close);

        Find.setText("Find");
        Find.setMaximumSize(new java.awt.Dimension(69, 25));
        Find.setMinimumSize(new java.awt.Dimension(69, 25));
        Find.setPreferredSize(new java.awt.Dimension(69, 25));
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });

        bottomJP.add(Find);

        getContentPane().add(bottomJP, java.awt.BorderLayout.SOUTH);

        getContentPane().add(topJP, java.awt.BorderLayout.NORTH);

        getContentPane().add(leftJP, java.awt.BorderLayout.WEST);

        getContentPane().add(rightJP, java.awt.BorderLayout.EAST);

        SaleJP.setLayout(new java.awt.GridBagLayout());

        SaleJP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SaleInvoiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleInvoiceLabel.setText("Invoice Contains : ");
        SaleInvoiceLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleInvoiceLabel, gridBagConstraints);

        SaleInvoiceTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleInvoiceTF, gridBagConstraints);

        SaleSalesmanLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleSalesmanLabel.setText("Salesman Name Contains : ");
        SaleSalesmanLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleSalesmanLabel, gridBagConstraints);

        SaleSalesmanTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleSalesmanTF, gridBagConstraints);

        SaleCustomerLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleCustomerLabel.setText("Customer Name Contains : ");
        SaleCustomerLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleCustomerLabel, gridBagConstraints);

        SaleCustomerTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleCustomerTF, gridBagConstraints);

        SaleSenderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleSenderLabel.setText("Sender Contains : ");
        SaleSenderLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        SaleSenderLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        SaleSenderLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleSenderLabel, gridBagConstraints);

        SaleSenderTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleSenderTF, gridBagConstraints);

        SaleDiscountLessLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleDiscountLessLabel.setText("Transaction Discount Less Than : ");
        SaleDiscountLessLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        SaleDiscountLessLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        SaleDiscountLessLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleDiscountLessLabel, gridBagConstraints);

        SaleDiscountMoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleDiscountMoreLabel.setText("Transaction Discount More Than : ");
        SaleDiscountMoreLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        SaleDiscountMoreLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        SaleDiscountMoreLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleDiscountMoreLabel, gridBagConstraints);

        SaleDiscountLessTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleDiscountLessTF, gridBagConstraints);

        SaleDiscountMoreTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleDiscountMoreTF, gridBagConstraints);

        SaleCommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SaleCommentLabel.setText("Comment Contains : ");
        SaleCommentLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        SaleCommentLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        SaleCommentLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleCommentLabel, gridBagConstraints);

        SaleCommentTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SaleJP.add(SaleCommentTF, gridBagConstraints);

        SearchTabbedPane.addTab("sale", SaleJP);

        PurchaseJP.setLayout(new java.awt.GridBagLayout());

        PurchaseJP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PurchaseInvoiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseInvoiceLabel.setText("Invoice Contains : ");
        PurchaseInvoiceLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseInvoiceLabel, gridBagConstraints);

        PurchaseInvoiceTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseInvoiceTF, gridBagConstraints);

        PurchaseCommisionerLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseCommisionerLabel.setText("Commisioner Name Contains : ");
        PurchaseCommisionerLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseCommisionerLabel, gridBagConstraints);

        PurchaseCommisionerTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseCommisionerTF, gridBagConstraints);

        PurchaseSuplierLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseSuplierLabel.setText("Suplier Name Contains : ");
        PurchaseSuplierLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseSuplierLabel, gridBagConstraints);

        PurchaseSuplierTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseSuplierTF, gridBagConstraints);

        PurchaseSenderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseSenderLabel.setText("Sender Contains : ");
        PurchaseSenderLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        PurchaseSenderLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        PurchaseSenderLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseSenderLabel, gridBagConstraints);

        PurchaseSenderTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseSenderTF, gridBagConstraints);

        PurchaseDiscountLessLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseDiscountLessLabel.setText("Transaction Discount Less Than : ");
        PurchaseDiscountLessLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        PurchaseDiscountLessLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        PurchaseDiscountLessLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseDiscountLessLabel, gridBagConstraints);

        PurchaseDiscountMoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseDiscountMoreLabel.setText("Transaction Discount More Than : ");
        PurchaseDiscountMoreLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        PurchaseDiscountMoreLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        PurchaseDiscountMoreLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseDiscountMoreLabel, gridBagConstraints);

        PurchaseDiscountLessTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseDiscountLessTF, gridBagConstraints);

        PurchaseDiscountMoreTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseDiscountMoreTF, gridBagConstraints);

        PurchaseCommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PurchaseCommentLabel.setText("Comment Contains : ");
        PurchaseCommentLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        PurchaseCommentLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        PurchaseCommentLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseCommentLabel, gridBagConstraints);

        PurchaseCommentTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PurchaseJP.add(PurchaseCommentTF, gridBagConstraints);

        SearchTabbedPane.addTab("purchase", PurchaseJP);

        SalaryJP.setLayout(new java.awt.GridBagLayout());

        SalaryJP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SalaryInvoiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SalaryInvoiceLabel.setText("Invoice Contains : ");
        SalaryInvoiceLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SalaryJP.add(SalaryInvoiceLabel, gridBagConstraints);

        SalaryInvoiceTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SalaryJP.add(SalaryInvoiceTF, gridBagConstraints);

        SalaryCommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        SalaryCommentLabel.setText("Comment Contains : ");
        SalaryCommentLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        SalaryCommentLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        SalaryCommentLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SalaryJP.add(SalaryCommentLabel, gridBagConstraints);

        SalaryCommentTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        SalaryJP.add(SalaryCommentTF, gridBagConstraints);

        SearchTabbedPane.addTab("salary", SalaryJP);

        IncomeJP.setLayout(new java.awt.GridBagLayout());

        IncomeJP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IncomeInvoiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IncomeInvoiceLabel.setText("Invoice Contains : ");
        IncomeInvoiceLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeInvoiceLabel, gridBagConstraints);

        IncomeInvoiceTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeInvoiceTF, gridBagConstraints);

        IncomeValueLessLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IncomeValueLessLabel1.setText("Value Less Than : ");
        IncomeValueLessLabel1.setMaximumSize(new java.awt.Dimension(154, 15));
        IncomeValueLessLabel1.setMinimumSize(new java.awt.Dimension(154, 15));
        IncomeValueLessLabel1.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeValueLessLabel1, gridBagConstraints);

        IncomeValueMoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IncomeValueMoreLabel.setText("Value More Than : ");
        IncomeValueMoreLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        IncomeValueMoreLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        IncomeValueMoreLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeValueMoreLabel, gridBagConstraints);

        IncomeValueLessTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeValueLessTF, gridBagConstraints);

        IncomeValueMoreTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeValueMoreTF, gridBagConstraints);

        IncomeCommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IncomeCommentLabel.setText("Comment Contains : ");
        IncomeCommentLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        IncomeCommentLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        IncomeCommentLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeCommentLabel, gridBagConstraints);

        IncomeCommentTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        IncomeJP.add(IncomeCommentTF, gridBagConstraints);

        SearchTabbedPane.addTab("income", IncomeJP);

        OutcomeJP.setLayout(new java.awt.GridBagLayout());

        OutcomeJP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OutcomeInvoiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OutcomeInvoiceLabel.setText("Invoice Contains : ");
        OutcomeInvoiceLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeInvoiceLabel, gridBagConstraints);

        OutcomeInvoiceTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeInvoiceTF, gridBagConstraints);

        OutcomeValueLessLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OutcomeValueLessLabel.setText("Value Less Than : ");
        OutcomeValueLessLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        OutcomeValueLessLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        OutcomeValueLessLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeValueLessLabel, gridBagConstraints);

        OutcomeValueMoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OutcomeValueMoreLabel.setText("Value More Than : ");
        OutcomeValueMoreLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        OutcomeValueMoreLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        OutcomeValueMoreLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeValueMoreLabel, gridBagConstraints);

        OutcomeValueLessTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeValueLessTF, gridBagConstraints);

        OutcomeValueMoreTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeValueMoreTF, gridBagConstraints);

        OutcomeCommentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OutcomeCommentLabel.setText("Comment Contains : ");
        OutcomeCommentLabel.setMaximumSize(new java.awt.Dimension(154, 15));
        OutcomeCommentLabel.setMinimumSize(new java.awt.Dimension(154, 15));
        OutcomeCommentLabel.setPreferredSize(new java.awt.Dimension(225, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeCommentLabel, gridBagConstraints);

        OutcomeCommentTF.setColumns(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        OutcomeJP.add(OutcomeCommentTF, gridBagConstraints);

        OutcomeTypeChB.setText("Type Contains : ");
        OutcomeTypeChB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OutcomeTypeChB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OutcomeTypeChBActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        OutcomeJP.add(OutcomeTypeChB, gridBagConstraints);

        OutcomeTypeCoB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Electric", "Telephone", "Water", "Other" }));
        OutcomeTypeCoB.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        OutcomeJP.add(OutcomeTypeCoB, gridBagConstraints);

        SearchTabbedPane.addTab("outcome", OutcomeJP);

        getContentPane().add(SearchTabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void OutcomeTypeChBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OutcomeTypeChBActionPerformed
        if(OutcomeTypeChB.isSelected())
            OutcomeTypeCoB.setEnabled(true);
        else
            OutcomeTypeCoB.setEnabled(false);
    }//GEN-LAST:event_OutcomeTypeChBActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        
        //the index of tabbedpane
        final int saleindex = 0;
        final int purchaseindex = 1;
        final int salaryindex = 2;
        final int incomeindex = 3;
        final int outcomeindex = 4;
        
        switch(SearchTabbedPane.getSelectedIndex()) {
            case saleindex    : SearchSaleTrans();
                                break;
            case purchaseindex: SearchPurchaseTrans();
                                break;
            case salaryindex  : SearchSalaryTrans();
                                break;
            case incomeindex  : SearchIncomeTrans();
                                break;
            case outcomeindex : SearchOutcomeTrans();
                                break;
        }
        
        dispose();
    }//GEN-LAST:event_FindActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        dispose();
    }//GEN-LAST:event_CloseActionPerformed
    
    private void SearchSaleTrans() {
        String invoice = SaleInvoiceTF.getText().trim();
        String salesman = SaleSalesmanTF.getText().trim();
        String customer = SaleCustomerTF.getText().trim();
        String sender = SaleSenderTF.getText().trim();
        String discountless = SaleDiscountLessTF.getText().trim();
        String discountmore = SaleDiscountMoreTF.getText().trim();
        String comment = SaleCommentTF.getText();
        
        if(invoice.equals(""))
            invoice = null;
        
        if(salesman.equals(""))
            salesman = null;
        
        if(customer.equals(""))
            customer = null;
        
        if(sender.equals(""))
            sender = null;
        
        if(discountless.equals(""))
            discountless = null;
        
        if(discountmore.equals(""))
            discountmore = null;
        
        if(comment.equals(""))
            comment = null;
        
        //invoice list
        List<String> invoicelist = null;
        
        invoicelist = tr.SearchSaleTransaction(invoice, salesman, customer, sender, discountless,
                discountmore, comment );
        
        //html editor
        HTMLEditorManipulation htmleditor = new HTMLEditorManipulation( transactionsEP,
                conn );
        
        //clear the whiteboard
        transactionsEP.setText("");
        
        for( int i=0; i<invoicelist.size(); i++ ) {
            htmleditor.HTMLSaleTransactionDialog(invoicelist.get(i));
        }
    }
    
    private void SearchPurchaseTrans() {
        String invoice = PurchaseInvoiceTF.getText().trim();
        String commisioner = PurchaseCommisionerTF.getText().trim();
        String suplier = PurchaseSuplierTF.getText().trim();
        String sender = PurchaseSenderTF.getText().trim();
        String discountless = PurchaseDiscountLessTF.getText().trim();
        String discountmore = PurchaseDiscountMoreTF.getText().trim();
        String comment = PurchaseCommentTF.getText();
        
        if(invoice.equals(""))
            invoice = null;
        
        if(commisioner.equals(""))
            commisioner = null;
        
        if(suplier.equals(""))
            suplier = null;
        
        if(sender.equals(""))
            sender = null;
        
        if(discountless.equals(""))
            discountless = null;
        
        if(discountmore.equals(""))
            discountmore = null;
        
        if(comment.equals(""))
            comment = null;
        
        //invoice list
        List<String> invoicelist = null;
        
        invoicelist = tr.SearchPurchaseTransaction(invoice, commisioner, suplier, sender, 
                discountless, discountmore, comment );
        
        //html editor
        HTMLEditorManipulation htmleditor = new HTMLEditorManipulation( transactionsEP,
                conn );
        
        //clear the whiteboard
        transactionsEP.setText("");
        
        for( int i=0; i<invoicelist.size(); i++ ) {
            htmleditor.HTMLBuyTransactionDialog(invoicelist.get(i));
        }
    }
    
    private void SearchSalaryTrans() {
        String invoice = SalaryInvoiceTF.getText().trim();
        String comment = SalaryCommentTF.getText();
        
        if(invoice.equals(""))
            invoice = null;
        
        if(comment.equals(""))
            comment = null;
        
        //invoice list
        List<String> invoicelist = null;
        
        invoicelist = tr.SearchSalaryTransaction(invoice, comment );
        
        //html editor
        HTMLEditorManipulation htmleditor = new HTMLEditorManipulation( transactionsEP,
                conn );
        
        //clear the whiteboard
        transactionsEP.setText("");
        
        for( int i=0; i<invoicelist.size(); i++ ) {
            htmleditor.HTMLSalaryDialog(invoicelist.get(i));
        }
    }
    
    private void SearchIncomeTrans() {
        String invoice = IncomeInvoiceTF.getText().trim();
        String valueless = IncomeValueLessTF.getText().trim();
        String valuemore = IncomeValueMoreTF.getText().trim();
        String comment = IncomeCommentTF.getText();
        
        if(invoice.equals(""))
            invoice = null;
        
        if(valueless.equals(""))
            valueless = null;
        
        if(valuemore.equals(""))
            valuemore = null;
        
        if(comment.equals(""))
            comment = null;
        
        //invoice list
        List<String> invoicelist = null;
        
        invoicelist = tr.SearchIncomeTransaction(invoice, valueless, valuemore, comment );
        
        //html editor
        HTMLEditorManipulation htmleditor = new HTMLEditorManipulation( transactionsEP,
                conn );
        
        //clear the whiteboard
        transactionsEP.setText("");
        
        for( int i=0; i<invoicelist.size(); i++ ) {
            htmleditor.HTMLIncomeDialog(invoicelist.get(i));
        }
    }
    
    private void SearchOutcomeTrans() {
        String invoice = OutcomeInvoiceTF.getText().trim();
        String valueless = OutcomeValueLessTF.getText().trim();
        String valuemore = OutcomeValueMoreTF.getText().trim();
        String type = (String)OutcomeTypeCoB.getSelectedItem();
        String comment = OutcomeCommentTF.getText();
        
        if(invoice.equals(""))
            invoice = null;
        
        if(type.equals("Electric"))
            type = "Listrik";
        else if(type.equals("Telephone"))
            type = "Telepon";
        else if(type.equals("Water"))
            type = "Air";
        else 
            type = "Lain-lain";
        
        if(valueless.equals(""))
            valueless = null;
        
        if(valuemore.equals(""))
            valuemore = null;
        
        if(comment.equals(""))
            comment = null;
        
        //invoice list
        List<String> invoicelist = null;
        
        invoicelist = tr.SearchOutcomeTransaction(invoice, type, valueless, valuemore, comment );
        
        //html editor
        HTMLEditorManipulation htmleditor = new HTMLEditorManipulation( transactionsEP,
                conn );
        
        //clear the whiteboard
        transactionsEP.setText("");
        
        for( int i=0; i<invoicelist.size(); i++ ) {
            htmleditor.HTMLOutcomeDialog(invoicelist.get(i));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    }
    
    private javax.swing.JEditorPane transactionsEP;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JButton Find;
    private javax.swing.JLabel IncomeCommentLabel;
    private javax.swing.JTextField IncomeCommentTF;
    private javax.swing.JLabel IncomeInvoiceLabel;
    private javax.swing.JTextField IncomeInvoiceTF;
    private javax.swing.JPanel IncomeJP;
    private javax.swing.JLabel IncomeValueLessLabel1;
    private javax.swing.JTextField IncomeValueLessTF;
    private javax.swing.JLabel IncomeValueMoreLabel;
    private javax.swing.JTextField IncomeValueMoreTF;
    private javax.swing.JLabel OutcomeCommentLabel;
    private javax.swing.JTextField OutcomeCommentTF;
    private javax.swing.JLabel OutcomeInvoiceLabel;
    private javax.swing.JTextField OutcomeInvoiceTF;
    private javax.swing.JPanel OutcomeJP;
    private javax.swing.JCheckBox OutcomeTypeChB;
    private javax.swing.JComboBox OutcomeTypeCoB;
    private javax.swing.JLabel OutcomeValueLessLabel;
    private javax.swing.JTextField OutcomeValueLessTF;
    private javax.swing.JLabel OutcomeValueMoreLabel;
    private javax.swing.JTextField OutcomeValueMoreTF;
    private javax.swing.JLabel PurchaseCommentLabel;
    private javax.swing.JTextField PurchaseCommentTF;
    private javax.swing.JLabel PurchaseCommisionerLabel;
    private javax.swing.JTextField PurchaseCommisionerTF;
    private javax.swing.JLabel PurchaseDiscountLessLabel;
    private javax.swing.JTextField PurchaseDiscountLessTF;
    private javax.swing.JLabel PurchaseDiscountMoreLabel;
    private javax.swing.JTextField PurchaseDiscountMoreTF;
    private javax.swing.JLabel PurchaseInvoiceLabel;
    private javax.swing.JTextField PurchaseInvoiceTF;
    private javax.swing.JPanel PurchaseJP;
    private javax.swing.JLabel PurchaseSenderLabel;
    private javax.swing.JTextField PurchaseSenderTF;
    private javax.swing.JLabel PurchaseSuplierLabel;
    private javax.swing.JTextField PurchaseSuplierTF;
    private javax.swing.JLabel SalaryCommentLabel;
    private javax.swing.JTextField SalaryCommentTF;
    private javax.swing.JLabel SalaryInvoiceLabel;
    private javax.swing.JTextField SalaryInvoiceTF;
    private javax.swing.JPanel SalaryJP;
    private javax.swing.JLabel SaleCommentLabel;
    private javax.swing.JTextField SaleCommentTF;
    private javax.swing.JLabel SaleCustomerLabel;
    private javax.swing.JTextField SaleCustomerTF;
    private javax.swing.JLabel SaleDiscountLessLabel;
    private javax.swing.JTextField SaleDiscountLessTF;
    private javax.swing.JLabel SaleDiscountMoreLabel;
    private javax.swing.JTextField SaleDiscountMoreTF;
    private javax.swing.JLabel SaleInvoiceLabel;
    private javax.swing.JTextField SaleInvoiceTF;
    private javax.swing.JPanel SaleJP;
    private javax.swing.JLabel SaleSalesmanLabel;
    private javax.swing.JTextField SaleSalesmanTF;
    private javax.swing.JLabel SaleSenderLabel;
    private javax.swing.JTextField SaleSenderTF;
    private javax.swing.JTabbedPane SearchTabbedPane;
    private javax.swing.JPanel bottomJP;
    private javax.swing.JPanel leftJP;
    private javax.swing.JPanel rightJP;
    private javax.swing.JPanel topJP;
    // End of variables declaration//GEN-END:variables
    
}
