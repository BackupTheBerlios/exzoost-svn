/*
 * AddWarehouseDialog.java
 *
 * Created on March 2, 2005, 3:42 PM
 */

package com.exzoost.gui.container;

import com.exzoost.database.ContainerDB;
import com.exzoost.gui.helper.GuiHelper;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author  knight
 */
public class AddContainerDialog extends javax.swing.JDialog {
    private ContainerDB containerdb;
    private Connection conn;
    private JTable table;
    /** Creates new form AddWarehouseDialog */
    public AddContainerDialog(java.awt.Frame parent, boolean modal, 
            JTable table, Connection conn ) {
        super(parent, modal);
        
        //setup the gui
        initComponents();
        
        //setup the volume label
        char cubic = '\u00b3';
        VolumeLabel.setText( "* Volume ( m" + cubic + " ) : " );
        
        GuiHelper.setOnCenter((Window)this);
        
        this.conn = conn;
        this.table = table;
        
        //must use this database class
        containerdb = new ContainerDB( conn );
        
        getRootPane().setDefaultButton(OK);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        BottomPanel = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        OK = new javax.swing.JButton();
        DummyTopLabel = new javax.swing.JLabel();
        LeftDummyLabel = new javax.swing.JLabel();
        RightDummyLabel = new javax.swing.JLabel();
        ContainerPanel = new javax.swing.JPanel();
        NameLabel = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        VolumeLabel = new javax.swing.JLabel();
        CommentLabel = new javax.swing.JLabel();
        commentTA = new javax.swing.JTextArea();
        Notes1 = new javax.swing.JLabel();
        volumeTF = new javax.swing.JTextField();
        PriceLabel = new javax.swing.JLabel();
        priceTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Container Dialog");
        BottomPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        BottomPanel.add(Cancel);

        OK.setText("OK");
        OK.setPreferredSize(new java.awt.Dimension(75, 25));
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        BottomPanel.add(OK);

        getContentPane().add(BottomPanel, java.awt.BorderLayout.SOUTH);

        DummyTopLabel.setText("                ");
        getContentPane().add(DummyTopLabel, java.awt.BorderLayout.NORTH);

        LeftDummyLabel.setText("     ");
        getContentPane().add(LeftDummyLabel, java.awt.BorderLayout.WEST);

        RightDummyLabel.setText("     ");
        getContentPane().add(RightDummyLabel, java.awt.BorderLayout.EAST);

        ContainerPanel.setLayout(new java.awt.GridBagLayout());

        ContainerPanel.setPreferredSize(new java.awt.Dimension(350, 260));
        NameLabel.setText("* Name : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        ContainerPanel.add(NameLabel, gridBagConstraints);

        nameTF.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        ContainerPanel.add(nameTF, gridBagConstraints);

        VolumeLabel.setText("* Volume         : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        ContainerPanel.add(VolumeLabel, gridBagConstraints);

        CommentLabel.setText("Comment : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        ContainerPanel.add(CommentLabel, gridBagConstraints);

        commentTA.setColumns(16);
        commentTA.setLineWrap(true);
        commentTA.setRows(8);
        commentTA.setTabSize(4);
        commentTA.setWrapStyleWord(true);
        commentTA.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        ContainerPanel.add(commentTA, gridBagConstraints);

        Notes1.setText("Fields marked with an asterisk * are required.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        ContainerPanel.add(Notes1, gridBagConstraints);

        volumeTF.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        ContainerPanel.add(volumeTF, gridBagConstraints);

        PriceLabel.setText("* Price : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        ContainerPanel.add(PriceLabel, gridBagConstraints);

        priceTF.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        ContainerPanel.add(priceTF, gridBagConstraints);

        getContentPane().add(ContainerPanel, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        String name = nameTF.getText().trim();
        String volume = volumeTF.getText().trim();
        String price = priceTF.getText().trim();
        String comment = commentTA.getText();
        
        if(name.equals("")) {
            JOptionPane.showMessageDialog(null,"Please insert the name text field!", 
                    "Warning", JOptionPane.WARNING_MESSAGE );
            nameTF.requestFocusInWindow();
            return;
        }
        
        if(volume.equals("")) {
            JOptionPane.showMessageDialog(null,"Please insert the volume text field!", 
                    "Warning", JOptionPane.WARNING_MESSAGE );
            volumeTF.requestFocusInWindow();
            return;
        }
        
        if(price.equals("")) {
            JOptionPane.showMessageDialog(null,"Please insert the price text field!", 
                    "Warning", JOptionPane.WARNING_MESSAGE );
            priceTF.requestFocusInWindow();
            return;
        }
        
        boolean result = containerdb.insertContainer(table, name, volume, price, comment ); 
        
        //error inserting container
        if(!result)
            JOptionPane.showMessageDialog(null,"Error adding container! See log file " +
                    "for detail!", "Warning", JOptionPane.WARNING_MESSAGE );
        
        dispose();
    }//GEN-LAST:event_OKActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        dispose();
    }//GEN-LAST:event_CancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddContainerDialog(new javax.swing.JFrame(), true, 
                        null, null).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel CommentLabel;
    private javax.swing.JPanel ContainerPanel;
    private javax.swing.JLabel DummyTopLabel;
    private javax.swing.JLabel LeftDummyLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel Notes1;
    private javax.swing.JButton OK;
    private javax.swing.JLabel PriceLabel;
    private javax.swing.JLabel RightDummyLabel;
    private javax.swing.JLabel VolumeLabel;
    private javax.swing.JTextArea commentTA;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField priceTF;
    private javax.swing.JTextField volumeTF;
    // End of variables declaration//GEN-END:variables
    
}
