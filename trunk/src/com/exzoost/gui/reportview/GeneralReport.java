/*
 * GeneralReport.java
 *
 * Created on February 28, 2005, 8:21 PM
 */

package com.exzoost.gui.reportview;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author  knight
 */
public class GeneralReport extends javax.swing.JDialog {
    private Connection conn;
    private JPanel panel;
    /** Creates new form GeneralReport */
    public GeneralReport(java.awt.Frame parent, boolean modal, 
            JPanel panel, Connection conn) {
        super(parent, modal);
        
        //setup the gui
        initComponents();
        
        //manipulate this panel
        this.panel = panel;
        
        //get the connection reference
        this.conn = conn;
        
        //set the dialog in center of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int vpos = dim.height / 2 - getHeight() / 2;
        int hpos = dim.width / 2 - getWidth() / 2;
        setLocation( hpos, vpos );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        BottomPanel = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        OK = new javax.swing.JButton();
        TopDummyLB = new javax.swing.JLabel();
        RightDummyLB = new javax.swing.JLabel();
        LeftDummyLB = new javax.swing.JLabel();
        ReportTabbedPane = new javax.swing.JTabbedPane();
        GeneralReportPanel = new javax.swing.JPanel();
        FromDateChooser = new com.toedter.calendar.JDateChooser();
        FromLB = new javax.swing.JLabel();
        ToDateChooser = new com.toedter.calendar.JDateChooser();
        ToLB = new javax.swing.JLabel();
        ProfitProgressPanel = new javax.swing.JPanel();
        FromMonthLB = new javax.swing.JLabel();
        FromMonthChooser = new com.toedter.calendar.JMonthChooser();
        FromYearLB = new javax.swing.JLabel();
        FromYearChooser = new com.toedter.calendar.JYearChooser();
        FromLB1 = new javax.swing.JLabel();
        ToLB1 = new javax.swing.JLabel();
        ToMonthLB = new javax.swing.JLabel();
        ToYearLB = new javax.swing.JLabel();
        ToMonthChooser = new com.toedter.calendar.JMonthChooser();
        ToYearChooser = new com.toedter.calendar.JYearChooser();
        ReportCoB = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("General Report Dialog");
        BottomPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        BottomPanel.add(Cancel);

        OK.setText("OK");
        OK.setPreferredSize(new java.awt.Dimension(75, 25));
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        BottomPanel.add(OK);

        getContentPane().add(BottomPanel, java.awt.BorderLayout.SOUTH);

        TopDummyLB.setText(" ");
        getContentPane().add(TopDummyLB, java.awt.BorderLayout.NORTH);

        RightDummyLB.setText("            ");
        getContentPane().add(RightDummyLB, java.awt.BorderLayout.EAST);

        LeftDummyLB.setText("            ");
        getContentPane().add(LeftDummyLB, java.awt.BorderLayout.WEST);

        GeneralReportPanel.setLayout(new java.awt.GridBagLayout());

        GeneralReportPanel.setMinimumSize(new java.awt.Dimension(160, 140));
        FromDateChooser.setPreferredSize(new java.awt.Dimension(161, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        GeneralReportPanel.add(FromDateChooser, gridBagConstraints);

        FromLB.setText("From : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        GeneralReportPanel.add(FromLB, gridBagConstraints);

        ToDateChooser.setPreferredSize(new java.awt.Dimension(161, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 25, 0);
        GeneralReportPanel.add(ToDateChooser, gridBagConstraints);

        ToLB.setText("To : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        GeneralReportPanel.add(ToLB, gridBagConstraints);

        ReportTabbedPane.addTab("General Report", GeneralReportPanel);

        ProfitProgressPanel.setLayout(new java.awt.GridBagLayout());

        FromMonthLB.setText("Month : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        ProfitProgressPanel.add(FromMonthLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        ProfitProgressPanel.add(FromMonthChooser, gridBagConstraints);

        FromYearLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FromYearLB.setText("Year : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 0);
        ProfitProgressPanel.add(FromYearLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 0);
        ProfitProgressPanel.add(FromYearChooser, gridBagConstraints);

        FromLB1.setText("From : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        ProfitProgressPanel.add(FromLB1, gridBagConstraints);

        ToLB1.setText("To : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        ProfitProgressPanel.add(ToLB1, gridBagConstraints);

        ToMonthLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToMonthLB.setText("Month : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 0);
        ProfitProgressPanel.add(ToMonthLB, gridBagConstraints);

        ToYearLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToYearLB.setText("Year : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 30, 0);
        ProfitProgressPanel.add(ToYearLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 30);
        ProfitProgressPanel.add(ToMonthChooser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 30);
        ProfitProgressPanel.add(ToYearChooser, gridBagConstraints);

        ReportCoB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3D BarChart", "2D BarChart", "3D LineChart", "2D LineChart" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        ProfitProgressPanel.add(ReportCoB, gridBagConstraints);

        ReportTabbedPane.addTab("Profit Progress", ProfitProgressPanel);

        getContentPane().add(ReportTabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        dispose();
    }//GEN-LAST:event_CancelActionPerformed

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        JEditorPane editorpane = new JEditorPane();
        JScrollPane scrollpane = new JScrollPane();
        
        //must use the help from ReportManipulation
        ReportManipulation rm = new ReportManipulation( conn );
        
        if(ReportTabbedPane.getSelectedIndex()==0) {
            //get the date
            Date datefrom = new Date( FromDateChooser.getDate().getTime() );
            Date dateto = new Date( ToDateChooser.getDate().getTime() );

            if(datefrom.compareTo(dateto)>0) {
                JOptionPane.showMessageDialog(null,"The date in To field is earlier than date in " +
                        "From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                return;
            }

            scrollpane.setBorder(
                    new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true));
            scrollpane.setName("reportpane");

            //set the properties of jeditorpane
            editorpane.setEditable(false);
            editorpane.setContentType("text/html");
            scrollpane.setViewportView(editorpane);

            panel.removeAll();
            panel.add(scrollpane); 
            panel.revalidate();
            panel.repaint();

            //manipulate the editorpane
            editorpane.setText( rm.EditorPaneGeneralReport(datefrom, dateto) );
        }
        else if(ReportTabbedPane.getSelectedIndex()==1) {
            //if year not compatible
            if(FromYearChooser.getYear()>ToYearChooser.getYear()) {
                JOptionPane.showMessageDialog(null,"The year in To field is earlier than year in " +
                        "From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                return;
            }
            else if(FromYearChooser.getYear()==ToYearChooser.getYear()){
                //if month is not compatible
                if(FromMonthChooser.getMonth()>ToMonthChooser.getMonth()) {
                    JOptionPane.showMessageDialog(null,"The month in To field is earlier than month " +
                            "in From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                    return;
                }
            }
            
            GregorianCalendar gregorian = new GregorianCalendar( ToYearChooser.getYear(),
                    ToMonthChooser.getMonth(), 1 );
            String fromdate = FromYearChooser.getYear() + "-" + (FromMonthChooser.getMonth()+1) + 
                    "-01";
        
            String todate = ToYearChooser.getYear() + "-" + (ToMonthChooser.getMonth()+1) + "-" + 
                    gregorian.getActualMaximum(Calendar.DAY_OF_MONTH);

            ChartPanel chartpanel = rm.ProfitProgressChartReport(fromdate, todate, 
                    (String)ReportCoB.getSelectedItem() );
            
            panel.removeAll();
            panel.add(chartpanel); 
            panel.revalidate();
            panel.repaint();
        
        }
        
        dispose();
    }//GEN-LAST:event_OKActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralReport(new javax.swing.JFrame(), true,
                        null, null).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JButton Cancel;
    private com.toedter.calendar.JDateChooser FromDateChooser;
    private javax.swing.JLabel FromLB;
    private javax.swing.JLabel FromLB1;
    private com.toedter.calendar.JMonthChooser FromMonthChooser;
    private javax.swing.JLabel FromMonthLB;
    private com.toedter.calendar.JYearChooser FromYearChooser;
    private javax.swing.JLabel FromYearLB;
    private javax.swing.JPanel GeneralReportPanel;
    private javax.swing.JLabel LeftDummyLB;
    private javax.swing.JButton OK;
    private javax.swing.JPanel ProfitProgressPanel;
    private javax.swing.JComboBox ReportCoB;
    private javax.swing.JTabbedPane ReportTabbedPane;
    private javax.swing.JLabel RightDummyLB;
    private com.toedter.calendar.JDateChooser ToDateChooser;
    private javax.swing.JLabel ToLB;
    private javax.swing.JLabel ToLB1;
    private com.toedter.calendar.JMonthChooser ToMonthChooser;
    private javax.swing.JLabel ToMonthLB;
    private com.toedter.calendar.JYearChooser ToYearChooser;
    private javax.swing.JLabel ToYearLB;
    private javax.swing.JLabel TopDummyLB;
    // End of variables declaration//GEN-END:variables
    
}
