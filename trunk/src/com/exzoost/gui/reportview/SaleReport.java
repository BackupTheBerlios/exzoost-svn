/*
 * CustomersReport.java
 *
 * Created on December 15, 2004, 9:43 PM
 */
/**
 *
 * @author  knight
 */
package com.exzoost.gui.reportview;

import com.exzoost.database.InventoryDB;
import com.exzoost.gui.helper.GuiHelper;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

import org.jfree.chart.ChartPanel;

public class SaleReport extends javax.swing.JDialog {
    private Connection conn;
    private InventoryDB inventory;
    /** Creates new form CustomersReport */
    public SaleReport(java.awt.Frame parent, boolean modal, 
            javax.swing.JPanel panel, Connection conn ) {
        super(parent, modal);
        this.conn = conn;
        initComponents();
        
        inventory = new InventoryDB( conn );
        inventory.initializeComboBox(ItemCoB, "items");
        
        this.panel = panel;
        
        //set the dialog in center of the screen
        GuiHelper.setOnCenter((Window)this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        BottomPanel = new javax.swing.JPanel();
        Cancel = new javax.swing.JButton();
        OK = new javax.swing.JButton();
        LeftDummyLabel = new javax.swing.JLabel();
        RightDummyLabel = new javax.swing.JLabel();
        ReportPanel = new javax.swing.JPanel();
        ReportTabbedPane = new javax.swing.JTabbedPane();
        BasicPanel = new javax.swing.JPanel();
        MonthLabel = new javax.swing.JLabel();
        MonthChooser = new com.toedter.calendar.JMonthChooser();
        YearLabel = new javax.swing.JLabel();
        YearChooser = new com.toedter.calendar.JYearChooser();
        AdvancedPanel = new javax.swing.JPanel();
        FromLabel = new javax.swing.JLabel();
        FromDateChooser = new com.toedter.calendar.JDateChooser();
        ToDateChooser = new com.toedter.calendar.JDateChooser();
        ToLabel = new javax.swing.JLabel();
        ProgressPanel = new javax.swing.JPanel();
        FromMonthLB = new javax.swing.JLabel();
        FromMonthChooser = new com.toedter.calendar.JMonthChooser();
        FromYearLB = new javax.swing.JLabel();
        FromYearChooser = new com.toedter.calendar.JYearChooser();
        FromLB = new javax.swing.JLabel();
        ToLB = new javax.swing.JLabel();
        ToMonthLB = new javax.swing.JLabel();
        ToYearLB = new javax.swing.JLabel();
        ToMonthChooser = new com.toedter.calendar.JMonthChooser();
        ToYearChooser = new com.toedter.calendar.JYearChooser();
        ItemCoB = new javax.swing.JComboBox();
        ReportCoB = new javax.swing.JComboBox();
        PieChartComboBox = new javax.swing.JComboBox();
        DetailBasic = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sale Report");
        BottomPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 10));

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        BottomPanel.add(Cancel);

        OK.setText("OK");
        OK.setPreferredSize(new java.awt.Dimension(75, 25));
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        BottomPanel.add(OK);

        getContentPane().add(BottomPanel, java.awt.BorderLayout.SOUTH);

        LeftDummyLabel.setText("     ");
        getContentPane().add(LeftDummyLabel, java.awt.BorderLayout.WEST);

        RightDummyLabel.setText("     ");
        getContentPane().add(RightDummyLabel, java.awt.BorderLayout.EAST);

        ReportPanel.setLayout(new java.awt.BorderLayout());

        ReportTabbedPane.setName("Basic");
        ReportTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ReportTabbedPaneStateChanged(evt);
            }
        });

        BasicPanel.setLayout(new java.awt.GridBagLayout());

        MonthLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MonthLabel.setText("Month : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        BasicPanel.add(MonthLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 0);
        BasicPanel.add(MonthChooser, gridBagConstraints);

        YearLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        YearLabel.setText("Year : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 0);
        BasicPanel.add(YearLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 30, 0);
        BasicPanel.add(YearChooser, gridBagConstraints);

        ReportTabbedPane.addTab("Basic", BasicPanel);

        AdvancedPanel.setLayout(new java.awt.GridBagLayout());

        FromLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FromLabel.setText("From : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        AdvancedPanel.add(FromLabel, gridBagConstraints);

        FromDateChooser.setPreferredSize(new java.awt.Dimension(161, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 20);
        AdvancedPanel.add(FromDateChooser, gridBagConstraints);

        ToDateChooser.setPreferredSize(new java.awt.Dimension(161, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 20, 20);
        AdvancedPanel.add(ToDateChooser, gridBagConstraints);

        ToLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToLabel.setText("To : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 20, 0);
        AdvancedPanel.add(ToLabel, gridBagConstraints);

        ReportTabbedPane.addTab("Advanced", AdvancedPanel);

        ProgressPanel.setLayout(new java.awt.GridBagLayout());

        FromMonthLB.setText("Month : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        ProgressPanel.add(FromMonthLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        ProgressPanel.add(FromMonthChooser, gridBagConstraints);

        FromYearLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FromYearLB.setText("Year : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 0);
        ProgressPanel.add(FromYearLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 0);
        ProgressPanel.add(FromYearChooser, gridBagConstraints);

        FromLB.setText("From : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 0, 0);
        ProgressPanel.add(FromLB, gridBagConstraints);

        ToLB.setText("To : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        ProgressPanel.add(ToLB, gridBagConstraints);

        ToMonthLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToMonthLB.setText("Month : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 0);
        ProgressPanel.add(ToMonthLB, gridBagConstraints);

        ToYearLB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ToYearLB.setText("Year : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 30, 0);
        ProgressPanel.add(ToYearLB, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 30);
        ProgressPanel.add(ToMonthChooser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 30);
        ProgressPanel.add(ToYearChooser, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        ProgressPanel.add(ItemCoB, gridBagConstraints);

        ReportCoB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3D BarChart", "2D BarChart", "3D LineChart", "2D LineChart" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        ProgressPanel.add(ReportCoB, gridBagConstraints);

        ReportTabbedPane.addTab("Progress", ProgressPanel);

        ReportPanel.add(ReportTabbedPane, java.awt.BorderLayout.NORTH);

        PieChartComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2D PieChart", "3D PieChart", "Transparent 3D PieChart" }));
        ReportPanel.add(PieChartComboBox, java.awt.BorderLayout.SOUTH);

        DetailBasic.setText("Detail");
        ReportPanel.add(DetailBasic, java.awt.BorderLayout.CENTER);

        getContentPane().add(ReportPanel, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void ReportTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ReportTabbedPaneStateChanged
        int selectedindex = ReportTabbedPane.getSelectedIndex();
        if(selectedindex==2) {
            PieChartComboBox.setEnabled(false);
        }
        else {
            PieChartComboBox.setEnabled(true);
        }
    }//GEN-LAST:event_ReportTabbedPaneStateChanged

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        //Select the tab
        ReportManipulation rm = new ReportManipulation( conn );
        
        String fromdate = "";
        String todate = "";
                    
        if(ReportTabbedPane.getSelectedIndex()==0) {
            
            GregorianCalendar gregorian = new GregorianCalendar( YearChooser.getYear(),
                    MonthChooser.getMonth(), 1 );
            fromdate = YearChooser.getYear() + "-" + (MonthChooser.getMonth()+1) + 
                    "-01";
                    
            todate = YearChooser.getYear() + "-" + (MonthChooser.getMonth()+1) + "-" +
                    gregorian.getActualMaximum(Calendar.DAY_OF_MONTH);
        }
        else if(ReportTabbedPane.getSelectedIndex()==1) {
            if(FromDateChooser.getDate().compareTo(ToDateChooser.getDate())>0) {
                JOptionPane.showMessageDialog(null,"The date in To field is earlier than " +
                        "date in From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                return;
            }
            
            fromdate = new java.sql.Date(FromDateChooser.getDate().getTime()).toString();
            todate = new java.sql.Date(ToDateChooser.getDate().getTime()).toString();
        }
        else if(ReportTabbedPane.getSelectedIndex()==2) {
            //if year not compatible
            if(FromYearChooser.getYear()>ToYearChooser.getYear()) {
                JOptionPane.showMessageDialog(null,"The year in To field is earlier than year in " +
                        "From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                return;
            }
            else if(FromYearChooser.getYear()==ToYearChooser.getYear()){
                //if month is not compatible
                if(FromMonthChooser.getMonth()>ToMonthChooser.getMonth()) {
                    JOptionPane.showMessageDialog(null,"The month in To field is earlier than month " +
                            "in From field!", "Warning", JOptionPane.WARNING_MESSAGE );
                    return;
                }
            }
            
            GregorianCalendar gregorian = new GregorianCalendar( ToYearChooser.getYear(),
                    ToMonthChooser.getMonth(), 1 );
            fromdate = FromYearChooser.getYear() + "-" + (FromMonthChooser.getMonth()+1) + 
                    "-01";
        
            todate = ToYearChooser.getYear() + "-" + (ToMonthChooser.getMonth()+1) + "-" + 
                    gregorian.getActualMaximum(Calendar.DAY_OF_MONTH);
        }
        
        panel.removeAll();
        
        JPanel tablepanel = new JPanel();
        //use the scrollpane
        JScrollPane scrollpane = new JScrollPane(  );
        
        if(DetailBasic.isSelected()&&ReportTabbedPane.getSelectedIndex()!=2) {
            JTable table = rm.ItemsDetailReport( fromdate, todate, "sale" );
            //table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            TableColumn col = table.getColumnModel().getColumn(1);
            col.setPreferredWidth(450);
            col = table.getColumnModel().getColumn(2);
            col.setPreferredWidth(450);
            scrollpane.setViewportView(table);
            
            DateFormat df = DateFormat.getDateInstance( DateFormat.LONG, Locale.ENGLISH );
            String title = "The Sale Transaction Between " + 
                        df.format( new java.sql.Date(1).valueOf(fromdate)) + " and " + 
                        df.format( new java.sql.Date(1).valueOf(todate));
            panel.add( new JLabel( title ), BorderLayout.NORTH );
            panel.add( scrollpane, BorderLayout.CENTER );
            
            //panel.add(tablepanel);
        }
        else {
        
            ChartPanel chartpanel = null;

            if(ReportTabbedPane.getSelectedIndex()==2) {
                chartpanel = rm.ItemProgressChartReport( fromdate, todate, (String)ItemCoB.getSelectedItem(),
                        (String)ReportCoB.getSelectedItem(), "sale" );
                scrollpane.setViewportView(chartpanel);
            }
            else {
                chartpanel = rm.ItemsTransPieReport( fromdate, todate,
                        (String)PieChartComboBox.getSelectedItem(), "sale" );    
                scrollpane.setViewportView(chartpanel);
            }
            panel.add(scrollpane);
        }
        
        
        //panel.add(chartpanel); 
                    
        panel.revalidate();
        panel.repaint();
        
        dispose();
    }//GEN-LAST:event_OKActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        dispose();
    }//GEN-LAST:event_CancelActionPerformed
    
    private javax.swing.JPanel panel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdvancedPanel;
    private javax.swing.JPanel BasicPanel;
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JButton Cancel;
    private javax.swing.JCheckBox DetailBasic;
    private com.toedter.calendar.JDateChooser FromDateChooser;
    private javax.swing.JLabel FromLB;
    private javax.swing.JLabel FromLabel;
    private com.toedter.calendar.JMonthChooser FromMonthChooser;
    private javax.swing.JLabel FromMonthLB;
    private com.toedter.calendar.JYearChooser FromYearChooser;
    private javax.swing.JLabel FromYearLB;
    private javax.swing.JComboBox ItemCoB;
    private javax.swing.JLabel LeftDummyLabel;
    private com.toedter.calendar.JMonthChooser MonthChooser;
    private javax.swing.JLabel MonthLabel;
    private javax.swing.JButton OK;
    private javax.swing.JComboBox PieChartComboBox;
    private javax.swing.JPanel ProgressPanel;
    private javax.swing.JComboBox ReportCoB;
    private javax.swing.JPanel ReportPanel;
    private javax.swing.JTabbedPane ReportTabbedPane;
    private javax.swing.JLabel RightDummyLabel;
    private com.toedter.calendar.JDateChooser ToDateChooser;
    private javax.swing.JLabel ToLB;
    private javax.swing.JLabel ToLabel;
    private com.toedter.calendar.JMonthChooser ToMonthChooser;
    private javax.swing.JLabel ToMonthLB;
    private com.toedter.calendar.JYearChooser ToYearChooser;
    private javax.swing.JLabel ToYearLB;
    private com.toedter.calendar.JYearChooser YearChooser;
    private javax.swing.JLabel YearLabel;
    // End of variables declaration//GEN-END:variables
    
}
